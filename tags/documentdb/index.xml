<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>documentdb on Xangelo.ca</title>
    <link>https://xangelo.ca/tags/documentdb/</link>
    <description>Recent content in documentdb on Xangelo.ca</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2011 - 2022</copyright>
    <lastBuildDate>Sat, 17 Sep 2022 02:12:13 -0400</lastBuildDate>
    <atom:link href="https://xangelo.ca/tags/documentdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mongo vs. DynamoDB</title>
      <link>https://xangelo.ca/posts/mongo-ux/</link>
      <pubDate>Sat, 17 Sep 2022 02:12:13 -0400</pubDate>
      <guid>https://xangelo.ca/posts/mongo-ux/</guid>
      <description>Abstract Whenever you get into the conversation of NoSQL, and specifically &amp;ldquo;Document based&amp;rdquo; systems, you inevitably seem to end up on either DynamoDB or Mongo. The truth is while DynamoDB is a wonderful tool, Mongo should probably be your first stop.&#xA;Mongo vs. DynamoDB Mongo and DynamoDB are two document storage databases in the NoSQL family. Where mongo took the more traditional &amp;ldquo;server&amp;rdquo; route, DynamoDB opted for &amp;ldquo;serverless&amp;rdquo;. As a result, most of the distinction between the two comes from this divide.</description>
    </item>
  </channel>
</rss>
